{{- if .Values.runner.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-runner-config
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/name: gitlab
    app.kubernetes.io/component: runner
data:
  config.toml: |-
    concurrent = {{ .Values.runner.config.concurrent }}
    check_interval = {{ .Values.runner.config.checkInterval }}
    log_level = "info"
    
    [[runners]]
      name = "kubernetes-runner"
      url = "{{ .Values.runner.registration.url }}"
      token = "{{ .Values.runner.registration.token }}"
      executor = "kubernetes"
      [runners.kubernetes]
        namespace = "{{ .Release.Namespace }}"
        image = "alpine:latest"
        pull_policy = "if-not-present"
        [[runners.kubernetes.volumes.secret]]
          name = "{{ .Values.runner.ca }}"
        [[runners.kubernetes.volume_mounts]]
          name = "gitlab-ca-certs"
          mount_path = "/etc/gitlab-runner/certs"
          read_only = true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-runner
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitlab-runner
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/exec", "pods/log", "secrets", "configmaps"]
    verbs: ["get", "list", "watch", "create", "patch", "delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-runner
  namespace: {{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: gitlab-runner
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: gitlab-runner
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-runner
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: gitlab
    app.kubernetes.io/name: gitlab
    app.kubernetes.io/component: runner
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: runner
      app.kubernetes.io/instance: gitlab
      app.kubernetes.io/component: runner
  template:
    metadata:
      labels:
        app.kubernetes.io/component: runner
        app.kubernetes.io/instance: gitlab
        app.kubernetes.io/name: gitlab
    spec:
      serviceAccountName: gitlab-runner
      containers:
        - name: gitlab-runner
          image: "{{ .Values.runner.image.repository }}:{{ .Values.runner.image.tag }}"
          imagePullPolicy: {{ .Values.runner.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
            - |
              # Copy config to writable location
              cp /config/config.toml /etc/gitlab-runner/config.toml
              chmod 644 /etc/gitlab-runner/config.toml
              
              # Start runner
              exec gitlab-runner run \
                --config /etc/gitlab-runner/config.toml \
                --working-directory /etc/gitlab-runner
          resources:
            {{- toYaml .Values.runner.resources | nindent 12 }}
          volumeMounts:
            - name: config-template
              mountPath: /config
              readOnly: true
            - name: runner-data
              mountPath: /etc/gitlab-runner
            - name: gitlab-ca-certs
              mountPath: /etc/gitlab-runner/certs
              readOnly: true
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          env:
            - name: CI_SERVER_URL
              value: "{{ .Values.runner.registration.url }}"
      volumes:
        - name: config-template
          configMap:
            name: gitlab-runner-config
        - name: runner-data
          emptyDir: {}
        - name: gitlab-ca-certs
          secret:
            secretName: {{ .Values.runner.ca }}
{{- end }}